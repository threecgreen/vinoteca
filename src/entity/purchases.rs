//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "purchases")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub price: Option<f64>,
    pub quantity: i32,
    pub vintage: Option<i32>,
    #[sea_orm(column_type = "Text", nullable)]
    pub memo: Option<String>,
    pub store_id: Option<i32>,
    pub wine_id: i32,
    pub date: Option<Date>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::stores::Entity",
        from = "Column::StoreId",
        to = "super::stores::Column::Id",
        on_update = "NoAction",
        on_delete = "Restrict"
    )]
    Stores,
    #[sea_orm(
        belongs_to = "super::wines::Entity",
        from = "Column::WineId",
        to = "super::wines::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Wines,
}

impl Related<super::stores::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Stores.def()
    }
}

impl Related<super::wines::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Wines.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
