//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "wine_grapes")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub wine_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub grape_id: i32,
    pub percent: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::grapes::Entity",
        from = "Column::GrapeId",
        to = "super::grapes::Column::Id",
        on_update = "NoAction",
        on_delete = "Restrict"
    )]
    Grapes,
    #[sea_orm(
        belongs_to = "super::wines::Entity",
        from = "Column::WineId",
        to = "super::wines::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Wines,
}

impl Related<super::grapes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Grapes.def()
    }
}

impl Related<super::wines::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Wines.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
